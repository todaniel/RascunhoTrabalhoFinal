@model _1stVersionFinalWork.Models.Encomendas

@{
    ViewBag.Title = "Edição";
}

<h2>Editar Dados da Encomenda</h2>
<br />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Encomendas</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EncomendaID)

        <div class="form-group">
            @Html.LabelFor(model => model.LocalExpedicao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LocalExpedicao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocalExpedicao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataExpedicao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataExpedicao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataExpedicao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DonoFK, "DonoFK", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DonoFK", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DonoFK, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JornadaFK, "JornadaFK", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("JornadaFK", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.JornadaFK, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <p style="margin-left:190px;">
            @* Primeiro caso retorna um id à view pretendida, neste caso não é necessário!!! *@
            @*[ @Html.ActionLink("Adicionar/Alterar Produtos à Encomenda", "Create", "ItensEncomendas", new { id = Model.EncomendaID }, null) ]*@
            <b>[ @Html.ActionLink("Adicionar/Alterar Produtos à Encomenda", "Create", "ItensEncomendas") ]</b>
        </p>
        <br /><br />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar Alterações" class="btn btn-default btn-success btn-lg" />
                <br /><br />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar à Listagem", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
